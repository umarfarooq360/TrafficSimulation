Script started on Wed Mar 18 19:18:58 2015
[?1034hbash-3.2$ ./commands_subset3
/Users/hh6eb/Desktop/subset3
-rwx------@ 1 hh6eb  RICHMOND\Domain Users  2107 Mar 18 19:15 TrafficModel.java
-rwx------@ 1 hh6eb  RICHMOND\Domain Users  1681 Mar 18 19:01 Intersection.java
-rwx------@ 1 hh6eb  RICHMOND\Domain Users  1545 Mar 18 18:45 Segment.java
-rwx------@ 1 hh6eb  RICHMOND\Domain Users  1290 Mar 18 18:44 Test_TrafficModel.java
-rwx------@ 1 hh6eb  RICHMOND\Domain Users  2456 Mar 18 17:43 Car.java
-rwx------@ 1 hh6eb  RICHMOND\Domain Users   917 Mar 18 17:43 Direction.java
-rwx--x--x  1 hh6eb  RICHMOND\Domain Users   662 Feb 28 17:03 DebugOutput.java
// Team member's names: Hunter Lambert, Omar Farooq,
//                      Tyler Barnett, Hans-Peter Hoellwirth

// *****************************************************************************
// *****************************************************************************
// **** TrafficModel
// *****************************************************************************
// *****************************************************************************


import java.util.*;

public class TrafficModel extends Object {

    private Intersection intersections[][];
    private int numIntersectionsInOneDirection;

    ///////////////////////////////////////////////////////////////////////
    /////// Constructor
    ///////////////////////////////////////////////////////////////////////
    public TrafficModel () {
        this.numIntersectionsInOneDirection = 0;
    }
    
    ///////////////////////////////////////////////////////////////////////
    /////// Constructor
    ///////////////////////////////////////////////////////////////////////
    public TrafficModel (int numIntersectionsInOneDirection) {
        this.numIntersectionsInOneDirection = numIntersectionsInOneDirection;
        this.intersections = new Intersection[numIntersectionsInOneDirection]
                                            [numIntersectionsInOneDirection];
    }

    ///////////////////////////////////////////////////////////////////////
    /////// Do test
    ///////////////////////////////////////////////////////////////////////
    public void doTest() {
        
        for (int row=0; row < numIntersectionsInOneDirection; row++) {
            for (int col=0; col < numIntersectionsInOneDirection; col++) {
                this.intersections[row][col]
                    = new Intersection(row + 1, col + 1);
            }
            
        }
        
        for (int row=0; row < numIntersectionsInOneDirection; row++) {
            for (int col=0; col < numIntersectionsInOneDirection; col++) {
                this.intersections[row][col].doUnitOfWork();
            }
        }
    }
}
// Team member's names: Hunter Lambert, Omar Farooq,
//                      Tyler Barnett, Hans-Peter Hoellwirth

// *****************************************************************************
// *****************************************************************************
// **** Test_TrafficModel
// *****************************************************************************
// *****************************************************************************

import java.io.*;
import java.util.*;

public class Test_TrafficModel extends Object {
    
    ///////////////////////////////////////////////////////////////////////
    /////// Main
    ///////////////////////////////////////////////////////////////////////
    public static void main(String[] args) throws FileNotFoundException {
        Scanner input = new Scanner(System.in);
        
        for (int i=0; i < 17; i++) {
            input.nextLine();
        }
        
        int numberOfIntersectionsInOneDirection = input.nextInt();
        DebugOutput.print("Number of intersections in one direction: "
                          + numberOfIntersectionsInOneDirection);
        
        TrafficModel model
                = new TrafficModel(numberOfIntersectionsInOneDirection);
        model.doTest();
    }

}
// Team member's names: Hunter Lambert, Omar Farooq,
//                      Tyler Barnett, Hans-Peter Hoellwirth

// *****************************************************************************
// *****************************************************************************
// **** Intersection
// *****************************************************************************
// *****************************************************************************

import java.util.*;

public class Intersection extends Object {
    
    private int row;
    private int col;

    ///////////////////////////////////////////////////////////////////////
    /////// Constructor
    ///////////////////////////////////////////////////////////////////////
    public Intersection () {
        
    }
    
    ///////////////////////////////////////////////////////////////////////
    /////// Constructor
    ///////////////////////////////////////////////////////////////////////
    public Intersection (int row, int col) {
        this();
        this.row = row;
        this.col = col;
    }
    
    ///////////////////////////////////////////////////////////////////////
    /////// Do unit of work
    ///////////////////////////////////////////////////////////////////////
    public void doUnitOfWork () {
        DebugOutput.print("" + this);
    }
    
    ///////////////////////////////////////////////////////////////////////
    /////// String representation of intersection
    ///////////////////////////////////////////////////////////////////////
    public String toString() {
        return "Intersection "
        + this.col
        + "/"
        + this.row;
    }
}// Team member's names: Hunter Lambert, Omar Farooq,
//                      Tyler Barnett, Hans-Peter Hoellwirth

// *****************************************************************************
// *****************************************************************************
// **** Direction
// *****************************************************************************
// *****************************************************************************


import java.util.*;

public class Direction extends Object {

    public static final int SOUTHWARD  = 0;
    public static final int EASTWARD   = 1;
    public static final int NORTHWARD  = 2;
    public static final int WESTWARD   = 3;

    ///////////////////////////////////////////////////////////////////////
    /////// Constructor
    ///////////////////////////////////////////////////////////////////////
    public Direction () {
        
    }
}
filename: data1_for_checking_top_level_logic 
When checking the top-level logic, the Java input statements should skip the 
first 17 lines in any file of data, then read a line as the value of 
numIntersectionsInOneDirection, then skip a line, then read a line as the 
number of cars to be created, then skip every other line (starting with skipping
the very next line) until the quantity of input numbers read is exactly
   6 times the number of cars to be created,
and then the Java program should no longer read any lines from the data file.
direction:  SOUTHWARD == 0; EASTWARD == 1; NORTHWARD == 2; WESTWARD == 3
The following three lines illustrate the somewhat-tricky terminology:
when a car travels south, the car travels SOUTHWARD
when an incoming segment of an intersection is aiming SOUTHWARD, the segment 
  is immediately north of that intersection
when an outgoing segment of an intersection is aiming SOUTHWARD, the segment
  is immediately south of that intersection
turning direction: NEVER_TURN == 0; TURN_RIGHTWARD == 1; TURN_LEFTWARD == -1
number of intersections in one direction:
2
DEBUGNumber of intersections in one direction: 2
DEBUGIntersection 1/1
DEBUGIntersection 2/1
DEBUGIntersection 1/2
DEBUGIntersection 2/2
bash-3.2$ exit
exit

Script done on Wed Mar 18 19:19:23 2015
